---
- name: Check existence of interfaces
  block:

    - name: "Assert: Debug interfaces bsd_jail_debug={{ bsd_jail_debug }}"
      when: bsd_jail_debug | bool
      ansible.builtin.debug:
        msg: "{{ bsd_jail_jails | json_query('[].interface[].dev') | unique }}"

    - name: "Assert: Check existence of interfaces"
      when: bsd_jail_assert_enable.interfaces
      vars:
        missing_interfaces: "{{ bsd_jail_jails |
                                json_query('[].interface[].dev') | unique |
                                reject('in', ansible_interfaces) }}"
      ansible.builtin.assert:
        that: missing_interfaces | length == 0
        fail_msg: "[ERR] Missing interface(s) {{ missing_interfaces }}. End of play."

- name: Check existence of storage bsd_ezjail_jaildir
  when:
    - bsd_ezjail_use_zfs | upper != 'YES'
    - bsd_jail_assert_enable.jaildir
  block:

    - name: "Assert: Stat {{ bsd_ezjail_jaildir }}"
      register: result
      ansible.builtin.stat:
        path: "{{ bsd_ezjail_jaildir }}"

    - name: "Assert: Storage exists {{ bsd_ezjail_jaildir }}"
      ansible.builtin.assert:
        that: result.stat.exists
        fail_msg: "[ERR] Storage {{ bsd_ezjail_jaildir }} does not exist. End of play."

- name: Check existence of storage bsd_ezjail_jailzfs
  when:
    - bsd_ezjail_use_zfs | upper == 'YES'
    - bsd_jail_assert_enable.zfs
  block:

    - name: "Assert: Collect zfs_facts"
      register: result
      community.general.zfs_facts:
        dataset: "{{ bsd_ezjail_jailzfs }}"
      ignore_errors: true

    - name: "Assert: Debug result bsd_jail_debug={{ bsd_jail_debug }}"
      when: bsd_jail_debug | bool
      ansible.builtin.debug:
        var: result

    - name: "Assert: Storage exists {{ bsd_ezjail_jailzfs }}"
      ansible.builtin.assert:
        that: not result.failed
        fail_msg: "[ERR] Storage {{ bsd_ezjail_jailzfs }} does not exist. End of play."

# TODO
# * Check network
# ifconfig_lo1_alias0="inet 10.2.0.10 netmask 255.255.255.255"
# gateway_enable="YES"
# * Check sysctl
# sysctl net.inet.ip.forwarding=1
# * Check PF
# ext_if="em0"
# jail_if="lo1"
# IP_PUB="192.0.2.1"
# IP_JAIL_WWW="10.6.6.6"
# NET_JAIL="10.6.6.0/24"
# PORT_WWW="{80,443}"
# # nat all jail traffic
# nat on $ext_if inet from ! ($ext_if) to any -> ($ext_if)
# # redirect www
# rdr pass on $ext_if proto tcp from any to $IP_PUB port $PORT_WWW -> $IP_JAIL_WWW

# EOF
